
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


import '/gen/schema.pb.dart';
import '/gen/schema.pbenum.dart';
import '/gen/schema.pbjson.dart';
final class Tables
{
    final Future<dynamic> Function(String filePath) _asyncloadFunction;
    Tables(this._asyncloadFunction);

    AiTbBlackboard? _tbBlackboard;
    AiTbBehaviorTree? _tbBehaviorTree;
    CommonTbGlobalConfig? _tbGlobalConfig;
    //道具表
    ItemTbItem? _tbItem;
    L10nTbL10NDemo? _tbL10NDemo;
    L10nTbPatchDemo? _tbPatchDemo;
    TagTbTestTag? _tbTestTag;
    TestTbFullTypes? _tbFullTypes;
    TestTbSingleton? _tbSingleton;
    TestTbNotIndexList? _tbNotIndexList;
    TestTbMultiUnionIndexList? _tbMultiUnionIndexList;
    TestTbMultiIndexList? _tbMultiIndexList;
    TestTbDataFromMisc? _tbDataFromMisc;
    TestTbMultiRowRecord? _tbMultiRowRecord;
    TestTbTestMultiColumn? _tbTestMultiColumn;
    TestTbMultiRowTitle? _tbMultiRowTitle;
    TestTbTestNull? _tbTestNull;
    TestTbDemoPrimitive? _tbDemoPrimitive;
    TestTbTestString? _tbTestString;
    TestTbDemoGroup? _tbDemoGroup;
    TestTbDemoGroup_C? _tbDemoGroup_C;
    TestTbDemoGroup_S? _tbDemoGroup_S;
    TestTbDemoGroup_E? _tbDemoGroup_E;
    TestTbTestGlobal? _tbTestGlobal;
    TestTbTestBeRef? _tbTestBeRef;
    TestTbTestBeRef2? _tbTestBeRef2;
    TestTbTestRef? _tbTestRef;
    TestTbTestSize? _tbTestSize;
    TestTbTestSet? _tbTestSet;
    TestTbTestRange? _tbTestRange;
    TestTbDetectCsvEncoding? _tbDetectCsvEncoding;
    TestTbItem2? _tbItem2;
    TestTbTestIndex? _tbTestIndex;
    TestTbTestMap? _tbTestMap;
    TestTbExcelFromJson? _tbExcelFromJson;
    TestTbCompositeJsonTable1? _tbCompositeJsonTable1;
    TestTbCompositeJsonTable2? _tbCompositeJsonTable2;
    TestTbCompositeJsonTable3? _tbCompositeJsonTable3;
    TestTbExcelFromJsonMultiRow? _tbExcelFromJsonMultiRow;
    TestTbTestScriptableObject? _tbTestScriptableObject;
    TestTbPath? _tbPath;
    TestTbTestFieldAlias? _tbTestFieldAlias;
    TestTbTestFieldVariant? _tbTestFieldVariant;
    TestTbTestFieldVariant2? _tbTestFieldVariant2;
    TestTbTestMapper? _tbTestMapper;
    TestTbDefineFromExcel2? _tbDefineFromExcel2;
    TbAutoImport1? _tbAutoImport1;
    TestTbAutoImport2? _tbAutoImport2;

    Future<void> waitLoad() async {
        var results = await Future.wait([
            _asyncloadFunction("ai_tbblackboard"),
            _asyncloadFunction("ai_tbbehaviortree"),
            _asyncloadFunction("common_tbglobalconfig"),
            _asyncloadFunction("item_tbitem"),
            _asyncloadFunction("l10n_tbl10ndemo"),
            _asyncloadFunction("l10n_tbpatchdemo"),
            _asyncloadFunction("tag_tbtesttag"),
            _asyncloadFunction("test_tbfulltypes"),
            _asyncloadFunction("test_tbsingleton"),
            _asyncloadFunction("test_tbnotindexlist"),
            _asyncloadFunction("test_tbmultiunionindexlist"),
            _asyncloadFunction("test_tbmultiindexlist"),
            _asyncloadFunction("test_tbdatafrommisc"),
            _asyncloadFunction("test_tbmultirowrecord"),
            _asyncloadFunction("test_tbtestmulticolumn"),
            _asyncloadFunction("test_tbmultirowtitle"),
            _asyncloadFunction("test_tbtestnull"),
            _asyncloadFunction("test_tbdemoprimitive"),
            _asyncloadFunction("test_tbteststring"),
            _asyncloadFunction("test_tbdemogroup"),
            _asyncloadFunction("test_tbdemogroup_c"),
            _asyncloadFunction("test_tbdemogroup_s"),
            _asyncloadFunction("test_tbdemogroup_e"),
            _asyncloadFunction("test_tbtestglobal"),
            _asyncloadFunction("test_tbtestberef"),
            _asyncloadFunction("test_tbtestberef2"),
            _asyncloadFunction("test_tbtestref"),
            _asyncloadFunction("test_tbtestsize"),
            _asyncloadFunction("test_tbtestset"),
            _asyncloadFunction("test_tbtestrange"),
            _asyncloadFunction("test_tbdetectcsvencoding"),
            _asyncloadFunction("test_tbitem2"),
            _asyncloadFunction("test_tbtestindex"),
            _asyncloadFunction("test_tbtestmap"),
            _asyncloadFunction("test_tbexcelfromjson"),
            _asyncloadFunction("test_tbcompositejsontable1"),
            _asyncloadFunction("test_tbcompositejsontable2"),
            _asyncloadFunction("test_tbcompositejsontable3"),
            _asyncloadFunction("test_tbexcelfromjsonmultirow"),
            _asyncloadFunction("test_tbtestscriptableobject"),
            _asyncloadFunction("test_tbpath"),
            _asyncloadFunction("test_tbtestfieldalias"),
            _asyncloadFunction("test_tbtestfieldvariant"),
            _asyncloadFunction("test_tbtestfieldvariant2"),
            _asyncloadFunction("test_tbtestmapper"),
            _asyncloadFunction("test_tbdefinefromexcel2"),
            _asyncloadFunction("tbautoimport1"),
            _asyncloadFunction("test_tbautoimport2"),
        ]);
        
        _tbBlackboard = AiTbBlackboard.fromBuffer(results[0]);
        _tbBehaviorTree = AiTbBehaviorTree.fromBuffer(results[1]);
        _tbGlobalConfig = CommonTbGlobalConfig.fromBuffer(results[2]);
        _tbItem = ItemTbItem.fromBuffer(results[3]);
        _tbL10NDemo = L10nTbL10NDemo.fromBuffer(results[4]);
        _tbPatchDemo = L10nTbPatchDemo.fromBuffer(results[5]);
        _tbTestTag = TagTbTestTag.fromBuffer(results[6]);
        _tbFullTypes = TestTbFullTypes.fromBuffer(results[7]);
        _tbSingleton = TestTbSingleton.fromBuffer(results[8]);
        _tbNotIndexList = TestTbNotIndexList.fromBuffer(results[9]);
        _tbMultiUnionIndexList = TestTbMultiUnionIndexList.fromBuffer(results[10]);
        _tbMultiIndexList = TestTbMultiIndexList.fromBuffer(results[11]);
        _tbDataFromMisc = TestTbDataFromMisc.fromBuffer(results[12]);
        _tbMultiRowRecord = TestTbMultiRowRecord.fromBuffer(results[13]);
        _tbTestMultiColumn = TestTbTestMultiColumn.fromBuffer(results[14]);
        _tbMultiRowTitle = TestTbMultiRowTitle.fromBuffer(results[15]);
        _tbTestNull = TestTbTestNull.fromBuffer(results[16]);
        _tbDemoPrimitive = TestTbDemoPrimitive.fromBuffer(results[17]);
        _tbTestString = TestTbTestString.fromBuffer(results[18]);
        _tbDemoGroup = TestTbDemoGroup.fromBuffer(results[19]);
        _tbDemoGroup_C = TestTbDemoGroup_C.fromBuffer(results[20]);
        _tbDemoGroup_S = TestTbDemoGroup_S.fromBuffer(results[21]);
        _tbDemoGroup_E = TestTbDemoGroup_E.fromBuffer(results[22]);
        _tbTestGlobal = TestTbTestGlobal.fromBuffer(results[23]);
        _tbTestBeRef = TestTbTestBeRef.fromBuffer(results[24]);
        _tbTestBeRef2 = TestTbTestBeRef2.fromBuffer(results[25]);
        _tbTestRef = TestTbTestRef.fromBuffer(results[26]);
        _tbTestSize = TestTbTestSize.fromBuffer(results[27]);
        _tbTestSet = TestTbTestSet.fromBuffer(results[28]);
        _tbTestRange = TestTbTestRange.fromBuffer(results[29]);
        _tbDetectCsvEncoding = TestTbDetectCsvEncoding.fromBuffer(results[30]);
        _tbItem2 = TestTbItem2.fromBuffer(results[31]);
        _tbTestIndex = TestTbTestIndex.fromBuffer(results[32]);
        _tbTestMap = TestTbTestMap.fromBuffer(results[33]);
        _tbExcelFromJson = TestTbExcelFromJson.fromBuffer(results[34]);
        _tbCompositeJsonTable1 = TestTbCompositeJsonTable1.fromBuffer(results[35]);
        _tbCompositeJsonTable2 = TestTbCompositeJsonTable2.fromBuffer(results[36]);
        _tbCompositeJsonTable3 = TestTbCompositeJsonTable3.fromBuffer(results[37]);
        _tbExcelFromJsonMultiRow = TestTbExcelFromJsonMultiRow.fromBuffer(results[38]);
        _tbTestScriptableObject = TestTbTestScriptableObject.fromBuffer(results[39]);
        _tbPath = TestTbPath.fromBuffer(results[40]);
        _tbTestFieldAlias = TestTbTestFieldAlias.fromBuffer(results[41]);
        _tbTestFieldVariant = TestTbTestFieldVariant.fromBuffer(results[42]);
        _tbTestFieldVariant2 = TestTbTestFieldVariant2.fromBuffer(results[43]);
        _tbTestMapper = TestTbTestMapper.fromBuffer(results[44]);
        _tbDefineFromExcel2 = TestTbDefineFromExcel2.fromBuffer(results[45]);
        _tbAutoImport1 = TbAutoImport1.fromBuffer(results[46]);
        _tbAutoImport2 = TestTbAutoImport2.fromBuffer(results[47]);
    }
    AiTbBlackboard? get tbBlackboard => _tbBlackboard;
    AiTbBehaviorTree? get tbBehaviorTree => _tbBehaviorTree;
    CommonTbGlobalConfig? get tbGlobalConfig => _tbGlobalConfig;
    ItemTbItem? get tbItem => _tbItem;
    L10nTbL10NDemo? get tbL10NDemo => _tbL10NDemo;
    L10nTbPatchDemo? get tbPatchDemo => _tbPatchDemo;
    TagTbTestTag? get tbTestTag => _tbTestTag;
    TestTbFullTypes? get tbFullTypes => _tbFullTypes;
    TestTbSingleton? get tbSingleton => _tbSingleton;
    TestTbNotIndexList? get tbNotIndexList => _tbNotIndexList;
    TestTbMultiUnionIndexList? get tbMultiUnionIndexList => _tbMultiUnionIndexList;
    TestTbMultiIndexList? get tbMultiIndexList => _tbMultiIndexList;
    TestTbDataFromMisc? get tbDataFromMisc => _tbDataFromMisc;
    TestTbMultiRowRecord? get tbMultiRowRecord => _tbMultiRowRecord;
    TestTbTestMultiColumn? get tbTestMultiColumn => _tbTestMultiColumn;
    TestTbMultiRowTitle? get tbMultiRowTitle => _tbMultiRowTitle;
    TestTbTestNull? get tbTestNull => _tbTestNull;
    TestTbDemoPrimitive? get tbDemoPrimitive => _tbDemoPrimitive;
    TestTbTestString? get tbTestString => _tbTestString;
    TestTbDemoGroup? get tbDemoGroup => _tbDemoGroup;
    TestTbDemoGroup_C? get tbDemoGroup_C => _tbDemoGroup_C;
    TestTbDemoGroup_S? get tbDemoGroup_S => _tbDemoGroup_S;
    TestTbDemoGroup_E? get tbDemoGroup_E => _tbDemoGroup_E;
    TestTbTestGlobal? get tbTestGlobal => _tbTestGlobal;
    TestTbTestBeRef? get tbTestBeRef => _tbTestBeRef;
    TestTbTestBeRef2? get tbTestBeRef2 => _tbTestBeRef2;
    TestTbTestRef? get tbTestRef => _tbTestRef;
    TestTbTestSize? get tbTestSize => _tbTestSize;
    TestTbTestSet? get tbTestSet => _tbTestSet;
    TestTbTestRange? get tbTestRange => _tbTestRange;
    TestTbDetectCsvEncoding? get tbDetectCsvEncoding => _tbDetectCsvEncoding;
    TestTbItem2? get tbItem2 => _tbItem2;
    TestTbTestIndex? get tbTestIndex => _tbTestIndex;
    TestTbTestMap? get tbTestMap => _tbTestMap;
    TestTbExcelFromJson? get tbExcelFromJson => _tbExcelFromJson;
    TestTbCompositeJsonTable1? get tbCompositeJsonTable1 => _tbCompositeJsonTable1;
    TestTbCompositeJsonTable2? get tbCompositeJsonTable2 => _tbCompositeJsonTable2;
    TestTbCompositeJsonTable3? get tbCompositeJsonTable3 => _tbCompositeJsonTable3;
    TestTbExcelFromJsonMultiRow? get tbExcelFromJsonMultiRow => _tbExcelFromJsonMultiRow;
    TestTbTestScriptableObject? get tbTestScriptableObject => _tbTestScriptableObject;
    TestTbPath? get tbPath => _tbPath;
    TestTbTestFieldAlias? get tbTestFieldAlias => _tbTestFieldAlias;
    TestTbTestFieldVariant? get tbTestFieldVariant => _tbTestFieldVariant;
    TestTbTestFieldVariant2? get tbTestFieldVariant2 => _tbTestFieldVariant2;
    TestTbTestMapper? get tbTestMapper => _tbTestMapper;
    TestTbDefineFromExcel2? get tbDefineFromExcel2 => _tbDefineFromExcel2;
    TbAutoImport1? get tbAutoImport1 => _tbAutoImport1;
    TestTbAutoImport2? get tbAutoImport2 => _tbAutoImport2;


}

